<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="alice">

    <!-- For gazebo ros control -->                                                                                                                                                   
    <gazebo>                                                                                                                             
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        </plugin>
    </gazebo>

    <gazebo reference="base_cyllinder">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="rotating_base">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="shoulder_link">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="elbow_link">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="wrist_link_pitch">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="wrist_link_roll">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <gazebo reference="camera_mount">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>
    
    
    <!-- The rescaling of 0.001 is necessary because gazebo takes all inputs as meters -->
    <!-- Meaning 100mm will be seen as 100m, hence rescaling is needed -->

    <!-- The base link is the cyllinder at the bottom-->
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder length="0.003" radius=".053" />
            </geometry>
            <material name="orange" />
            <origin rpy="0 0 0" xyz="0 0 0" />
        </visual>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <mass value="100" />
            <inertia ixx="0.0702" ixy="0" ixz="0" iyy="0.0702" iyz="0"
                izz="0.1404" />
        </inertial>
        <collision>
            <geometry>
                <cylinder length="0.001" radius="0.053" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0" /> 
        </collision>
    </link>
        
    <link name="rotating_base">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_base.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <material name="orange" />
            <origin rpy="0 0 3.1416" xyz="0 0.004 0" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_base.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 3.1416" xyz="0 0.004 0" />
        </collision>
        <inertial>
            <origin rpy="0 0 3.1416" xyz="0 0.004 0" />
            <mass value="0.262" />
            <inertia ixx="4.0242e-04" ixy="0" ixz="0" iyy="4.0242e-04" iyz="0"
                izz="3.6797e-04" />
        </inertial>
    </link>
    <link name="shoulder_link">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_shoulder.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <material name="orange" />
            <origin rpy="0 0 0" xyz="-0.0045 0.0055 -0.026" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_shoulder.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 0" xyz="-0.0045 0.0055 -0.026" />
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-0.0045 0.0055 -0.026" />
            <mass value="0.126" />
            <inertia ixx="0.0003385" ixy="0" ixz="0" iyy="0.0003173" iyz="0"
                izz="0.00004818" />
        </inertial>
    </link>
    <link name="elbow_link">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_elbow.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <material name="orange" />
            <origin rpy="0 0 0" xyz="-0.0045 0.005 -0.025" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_elbow.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 0" xyz="-0.0045 0.005 -0.025" />
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-0.0045 0.005 -0.025" />
            <mass value="0.119" />
            <inertia ixx="0.0003385" ixy="0" ixz="0" iyy="0.0003173" iyz="0"
                izz="0.00004818" />
        </inertial>
    </link>
    <link name="wrist_link_pitch">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_wrist_pitch.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <material name="orange" />
            <origin rpy="0 0 0" xyz="0.003 -0.0004 -0.024" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_wrist_pitch.stl"
                    scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 0" xyz="0.003 -0.0004 -0.024" />
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0.003 -0.0004 -0.024" />
            <mass value="0.059" />
            <inertia ixx="1.5897e-05" ixy="0" ixz="0" iyy="2.5056e-05" iyz="0"
                izz="1.4021e-05" />
        </inertial>
    </link>
    <link name="wrist_link_roll">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_wrist_roll.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="white" />
            <origin rpy="0 0 0" xyz="0 -0.0205 -0.039" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/braccio_wrist_roll.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0" />
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <mass value="0.059" />
            <inertia ixx="0.000348958333333" ixy="0" ixz="0" iyy="0.000348958333333" iyz="0" izz="3.125e-05" />
        </inertial>
    </link>

    <link name="camera_mount">
        <visual>
            <geometry>
                <mesh filename="package://alice_description/stl/alice_camera_mount_v3.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="green" />
            <origin rpy="0 0 0" xyz="0 0 0" />
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://alice_description/stl/alice_camera_mount_v3.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0" />
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <mass value="0.059" />
            <inertia ixx="0.000348958333333" ixy="0" ixz="0" iyy="0.000348958333333" iyz="0" izz="3.125e-05" />
        </inertial>
    </link>

    <!-- Create the link (or like item) -->
    <!-- <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.09 0.025 0.025" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.08 0.02 0.02" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.072" />
            <inertia ixx="0.0" ixy="0" ixz="0" iyy="0" iyz="0"
                izz="0" />
        </inertial>
    </link> -->


    <!-- Add alternative way to look at your camera -->
    <!-- We need to turn it 90 degrees in yaw, CCW -->
    <!-- <link name="camera_link_optical">
    </link>

    <joint name="camera_optical_joint" type="fixed">
        <parent link="camera_link" />
        <child link="camera_link_optical" />
        <origin xyz="0 0 0" rpy="-3.14 -1.5707 -1.5707" />
    </joint> -->
    <!-- Add alternative way to look at your camera -->


    <!-- Base joint is the rotating thing -->
    <joint name="base_joint" type="revolute">
        <axis xyz="0 0 -1" />
        <limit effort="1.0" lower="0.0" upper="3.1416" velocity="1.0" />
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="base_link" />
        <child link="rotating_base" />
        <dynamics damping="0.1" friction="0.001" />
    </joint>
    <joint name="shoulder_joint" type="revolute">
        <axis xyz="1 0 0" />
        <limit effort="1.0" lower="0.2618" upper="2.8798" velocity="1.0" />
        <origin rpy="-1.5708 0 0" xyz="0 -.002 0.072" />
        <parent link="rotating_base" />
        <child link="shoulder_link" />
        <dynamics damping="0.1" friction="0.001" />
    </joint>
    <joint name="elbow_joint" type="revolute">
        <axis xyz="1 0 0" />
        <limit effort="1.0" lower="0" upper="3.1416" velocity="1.0" />
        <origin rpy="-1.5708 0 0" xyz="0 0 0.125" />
        <parent link="shoulder_link" />
        <child link="elbow_link" />
        <dynamics damping="0.1" friction="0.001" />
    </joint>
    <joint name="wrist_pitch_joint" type="revolute">
        <axis xyz="1 0 0" />
        <limit effort="1.0" lower="0" upper="3.1416" velocity="1.0" />
        <origin rpy="-1.5708 0 0" xyz="0 0 0.125" />
        <parent link="elbow_link" />
        <child link="wrist_link_pitch" />
        <dynamics damping="0.1" friction="0.001" />
    </joint>
    <joint name="wrist_roll_joint" type="revolute">
        <axis xyz="1 0 0" />
        <limit effort="1.0" lower="0" upper="3.1416" velocity="1.0" />
        <!-- <origin rpy="0 1.5708 0" xyz="-0.019 0.012 0.1117" /> -->
        <origin rpy="0 1.5708 0" xyz="-0.0007 -0.003 0.111"/>
        <parent link="wrist_link_pitch" />
        <child link="wrist_link_roll" />
        <dynamics damping="0.1" friction="0.001" />
    </joint>
    <joint name="camera_mount_joint" type="fixed">
        <origin rpy="1.5708 -3.14 3.14" xyz="0.006 0.013 0.046" />
        <parent link="wrist_link_roll" />
        <child link="camera_mount" />
    </joint>


    <!-- <joint name="camera_joint" type="fixed">
        <parent link="wrist_link_roll" />
        <child link="camera_link" />
        <origin rpy="0 0 0" xyz="0 0 0.073" />
    </joint> -->


    <!-- Add the D435 Camera -->
    <xacro:arg name="use_nominal_extrinsics" default="false" />
    <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro"/>

    <xacro:sensor_d435 parent="camera_mount" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
        <origin xyz="0.013 0.0507 0.043" rpy="0 4.71238 1.5708" scale = " 0.001 0.001 0.001" />
    </xacro:sensor_d435>


    <gazebo reference="base_cyllinder">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/Turquoise</material>
    </gazebo>
    <gazebo reference="rotating_base">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="shoulder_link">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="elbow_link">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="wrist_link_pitch">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="wrist_link_roll">
        <mu1>1</mu1>
        <mu2>1</mu2>
        <selfCollide>true</selfCollide>
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="camera_mount">
        <selfCollide>true</selfCollide>
        <material>Gazebo/Black</material>
    </gazebo>
    <!-- <gazebo reference="camera_link">
        <selfCollide>true</selfCollide>
        <material>Gazebo/Black</material>
    </gazebo> -->

    <!-- Specify colors-->
    <material name="orange">
        <color rgba="0.57 0.17 0.0 1" />
    </material>
    <material name="white">
        <color rgba="0.8 0.8 0.8 1.0" />
    </material>
    <material name="black">
        <color rgba="0 0 0 0.50" />
    </material>


    <!-- Fixed world -->
    <link name="world" />
    <joint name="world_joint" type="fixed">
        <parent link="world" />
        <child link="base_link" />
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
    </joint>


    <!-- Gazebo reference for depth camera -->
    <gazebo reference="camera_link_optical">
        <sensor type="depth" name="camera_depth_sensor">
            <always_on>true</always_on>
            <update_rate>20.0</update_rate>
            <camera name="realsense_camera">

                <!-- 87 degrees horizontal FOV converted to radians-->
                <horizontal_fov>1.51843644544</horizontal_fov>
                
                <image>
                    <!-- Set on Quarter HD -->
                    <!-- 960 x 540, 1280 x 720 options too -->
                    <width>480</width>
                    <height>270</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.3</near>
                    <far>2.0</far>
                </clip>
            </camera>
            <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.2</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>camera_ir</cameraName>
                <imageTopicName>/camera/color/image_raw</imageTopicName>
                <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
                <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
                <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
                <frameName>camera_link</frameName>
                <pointCloudCutoff>0.3</pointCloudCutoff>
                <pointCloudCutoffMax>2.0</pointCloudCutoffMax>
                <distortionK1>0</distortionK1>
                <distortionK2>0</distortionK2>
                <distortionK3>0</distortionK3>
                <distortionT1>0</distortionT1>
                <distortionT2>0</distortionT2>
                <CxPrime>0</CxPrime>
                <Cx>0</Cx>
                <Cy>0</Cy>
                <focalLength>0</focalLength>
                <hackBaseline>0</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>


    <!-- Transmissions for MoveIt -->
    <transmission name="trans_base_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="base_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="base_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_shoulder_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_elbow_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="elbow_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="elbow_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_wrist_pitch_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_pitch_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_pitch_joint_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
</robot>
